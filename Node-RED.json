[
    {
        "id": "1a1f3aa7a2b6c51c",
        "type": "mqtt in",
        "z": "flow",
        "name": "Sensor Data",
        "topic": "esp32/sensors",
        "qos": "0",
        "datatype": "auto",
        "broker": "mqtt_broker",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 140,
        "y": 80,
        "wires": [
            [
                "c429c215d73f75d1",
                "temp",
                "hum",
                "acc",
                "gyro",
                "btn"
            ]
        ]
    },
    {
        "id": "c429c215d73f75d1",
        "type": "debug",
        "z": "flow",
        "name": "Full Sensor Data",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 370,
        "y": 40,
        "wires": []
    },
    {
        "id": "temp",
        "type": "function",
        "z": "flow",
        "name": "Temperature",
        "func": "return { payload: msg.payload.Temp };",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 80,
        "wires": [
            [
                "tempGauge"
            ]
        ]
    },
    {
        "id": "tempGauge",
        "type": "ui_gauge",
        "z": "flow",
        "name": "Temp Gauge",
        "group": "main",
        "order": 1,
        "width": 6,
        "height": 2,
        "gtype": "gage",
        "title": "Temperature (°C)",
        "label": "°C",
        "format": "{{value}}",
        "min": 0,
        "max": 50,
        "x": 600,
        "y": 80,
        "wires": []
    },
    {
        "id": "hum",
        "type": "function",
        "z": "flow",
        "name": "Humidity",
        "func": "return { payload: msg.payload.Hum };",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 120,
        "wires": [
            [
                "humGauge"
            ]
        ]
    },
    {
        "id": "humGauge",
        "type": "ui_gauge",
        "z": "flow",
        "name": "Humidity Gauge",
        "group": "main",
        "order": 2,
        "width": 6,
        "height": 2,
        "gtype": "gage",
        "title": "Humidity (%)",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": 100,
        "x": 600,
        "y": 120,
        "wires": []
    },
    {
        "id": "acc",
        "type": "function",
        "z": "flow",
        "name": "Accel X",
        "func": "return { payload: msg.payload.AcX };",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 160,
        "wires": [
            [
                "accelChart"
            ]
        ]
    },
    {
        "id": "accelChart",
        "type": "ui_chart",
        "z": "flow",
        "name": "Acceleration X",
        "group": "main",
        "order": 3,
        "width": 6,
        "height": 3,
        "label": "Accel X (g)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4"
        ],
        "outputs": 1,
        "x": 600,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "gyro",
        "type": "function",
        "z": "flow",
        "name": "Gyro Z",
        "func": "return { payload: msg.payload.GyZ };",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 200,
        "wires": [
            [
                "gyroChart"
            ]
        ]
    },
    {
        "id": "gyroChart",
        "type": "ui_chart",
        "z": "flow",
        "name": "Gyroscope Z",
        "group": "main",
        "order": 4,
        "width": 6,
        "height": 3,
        "label": "Gyro Z (°/s)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderUnit": "3600",
        "useOneColor": false,
        "colors": [
            "#ff7f0e"
        ],
        "outputs": 1,
        "x": 600,
        "y": 200,
        "wires": []
    },
    {
        "id": "btn",
        "type": "function",
        "z": "flow",
        "name": "Button State",
        "func": "return { payload: msg.payload.Btn ? 'Pressed' : 'Released' };",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 240,
        "wires": [
            [
                "btnText"
            ]
        ]
    },
    {
        "id": "btnText",
        "type": "ui_text",
        "z": "flow",
        "group": "main",
        "order": 5,
        "width": 6,
        "height": 1,
        "name": "Button State",
        "label": "Button",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 600,
        "y": 240,
        "wires": []
    },
    {
        "id": "alert",
        "type": "mqtt in",
        "z": "flow",
        "name": "Climate Alert",
        "topic": "esp32/warning",
        "qos": "0",
        "datatype": "auto",
        "broker": "mqtt_broker",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 150,
        "y": 300,
        "wires": [
            [
                "alertText"
            ]
        ]
    },
    {
        "id": "alertText",
        "type": "ui_text",
        "z": "flow",
        "group": "main",
        "order": 6,
        "width": 6,
        "height": 1,
        "name": "Climate Alert",
        "label": "Alert",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 400,
        "y": 300,
        "wires": []
    },
    {
        "id": "mqtt_broker",
        "type": "mqtt-broker",
        "name": "Local MQTT",
        "broker": "192.168.0.127",
        "port": "1883",
        "clientid": "nodered-dashboard",
        "usetls": false,
        "compatmode": false,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "main",
        "type": "ui_group",
        "name": "ESP32 Monitor",
        "tab": "dashboard",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "dashboard",
        "type": "ui_tab",
        "name": "ESP32 Dashboard",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    }
]
